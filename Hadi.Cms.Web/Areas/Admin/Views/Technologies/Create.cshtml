@using Hadi.Cms.Language.Resources
@model Hadi.Cms.ApplicationService.CommandModels.TechnologyCreateCommand

@{
    ViewBag.Title = Strings.Global_New_Tool_Technology;
}

@section style{
    <!-- for checkbox and radios -->
    @Styles.Render("~/Content/RadaTemplate/css/plugins/summernot")
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@Strings.Global_New_Tool_Technology</h2>
        <ol class="breadcrumb">
            <li>
                @if (ViewBag.Success == "1")
                {
                    <a href="@Url.Action("Create", "Technologies", new { area = "Admin" })" class="btn btn-primary">
                        @Strings.Global_New_Tool_Technology
                    </a>
                }
            </li>
            <div style="float: left; display: @(ViewBag.Success == null ? "none" : "block")">
                <div class="alert @(ViewBag.Success == "1" ? "alert-success" : "alert-danger") alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    @ViewBag.Message
                </div>
            </div>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

@using (Html.BeginForm("Create", "Technologies", FormMethod.Post, new { id = "CreateTechnologyForm", @class = "form-horizontal m-t-md", @enctype = "multipart/form-data" }))
{
    <div class="row">
        @Html.AntiForgeryToken()

        <div class="col-md-12 col-sm-12 col-lg-6">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@Strings.Global_BaseInformation</h5>
                </div>
                <div class="ibox-content">
                    <div class="form-group">
                        @Html.Label(Strings.TechnologyModel_Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control rtl-input" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label(Strings.TechnologyModel_IsTool)
                        @Html.EditorFor(model => model.IsTool, new { htmlAttributes = new { @class = "rtl-input i-checks" } })
                        @Html.ValidationMessageFor(model => model.IsTool, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label(Strings.TechnologyModel_IsActive)
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "rtl-input i-checks" } })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label(Strings.TechnologyModel_AttachmentImage)
                        <input type="file" accept="image/*" name="file" id="file">
                        @Html.ValidationMessageFor(model => model.ImageGuid, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-4 col-sm-offset-0">
            <input type="submit" value="@Strings.Global_Save" class="btn btn-primary" />
        </div>
    </div>
}


@section scripts{

    @Scripts.Render("~/Content/RadaTemplate/js/plugins/summernote")

    <script>
        $(function () {
            $('#CreateTechnologyForm').submit(function () {
                if ($("#Name").val() == "") {
                    MyAlert('@Strings.Error', '@Strings.Technology_Tool_Name_Error', 4000, 'error');
                    return false;
                }
                else {
                    var formData = new FormData($(this)[0]);
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: formData,
                        success: function (result) {
                            alert(result);
                        },
                        error: function () {
                            alert('error');
                        }
                    });
                    return false;
                }
            });

        });

        function persianToEnglishNumber(input) {
            var inputstring = input;
            var persian = ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"];
            var english = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
            for (var i = 0; i < 10; i++) {
                var regex = new RegExp(persian[i], 'g');
                inputstring = inputstring.toString().replace(regex, english[i]);
            }
            return inputstring;
        }
    </script>
}
