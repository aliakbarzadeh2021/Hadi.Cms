@using Hadi.Cms.Language.Resources
@model Hadi.Cms.ApplicationService.CommandModels.ServiceEditCommand

@{
    ViewBag.Title = Strings.Global_EditService;
}

@section style{
    @Styles.Render("~/Content/RadaTemplate/css/plugins/summernot")
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@Strings.Global_BaseInformation</h2>
        <ol class="breadcrumb">
            <li>
                @if (ViewBag.Success == "1")
                {
                    <a href="@Url.Action("Create", "Services", new { area = "Admin" })" class="btn btn-primary">
                        @Strings.Global_EditService
                    </a>
                }
            </li>
            <div style="float: left; display: @(ViewBag.Success == null ? "none" : "block")">
                <div class="alert @(ViewBag.Success == "1" ? "alert-success" : "alert-danger") alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">Ã—</button>
                    @ViewBag.Message
                </div>
            </div>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

@using (Html.BeginForm("Edit", "Services", FormMethod.Post, new { id = "EditServiceForm", @class = "form-horizontal m-t-md", @enctype = "multipart/form-data" }))
{
    <div class="row">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.AttachmentImageId)
        @Html.HiddenFor(model => model.SectionOneImageGuid)
        @Html.HiddenFor(model => model.SectionOneThumbnailImageGuid)
        @Html.HiddenFor(model => model.SectionTwoImageGuid)
        @Html.HiddenFor(model => model.SectionTwoThumbnailImageGuid)
        @Html.HiddenFor(model => model.SectionThreeImageGuid)
        @Html.HiddenFor(model => model.SectionThreeThumbnailImageGuid)
        @Html.HiddenFor(model => model.SectionFourImageGuid)
        @Html.HiddenFor(model => model.SectionFourThumbnailImageGuid)
        @Html.HiddenFor(model => model.ServiceLogoId)

        <div class="col-md-12 col-sm-12 col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@Strings.Global_EditService</h5>
                </div>
                <div class="ibox-content">
                    <div class="form-group">
                        @Html.Label(Strings.ServiceModel_Title)
                        @Html.TextAreaFor(model => model.Title, new { @class = "form-control rtl-input", rows = "2" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label(Strings.ServiceModel_Tags)
                        @Html.DropDownListFor(model => model.ServiceTagsId, new SelectList(ViewBag.Tags, "Id", "Title"), "", new { @class = "form-control multiselect2" })
                        @Html.ValidationMessageFor(model => model.ServiceTagsId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group-description">
                        @Html.Label(Strings.ServiceModel_Description)
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control descriptionText rtl-input", @rows = 10 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label(Strings.ServiceModel_IsActive)
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "rtl-input i-checks" } })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="col-sm-2">
                            @Html.Label(Strings.ServiceModel_AttachmentImageId)
                        </div>
                        <div class="col-sm-7">
                            <input type="file" accept="image/*" name="file" id="servicePic">
                            @Html.ValidationMessageFor(model => model.AttachmentImageId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3 input-group">
                            @if (!string.IsNullOrEmpty(Model.Source))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.Source" />
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-2">
                            @Html.Label(Strings.ServiceModel_Servicelogo)
                        </div>
                        <div class="col-sm-7">
                            <input type="file" name="logoService" id="logoService">
                        </div>
                        <div class="col-sm-3">
                            @if (!string.IsNullOrEmpty(Model.ServiceLogoSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.ServiceLogoSource" style="background: gray;" />
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="form-group form-group-sectiononedescription">
                        @Html.Label(Strings.ServiceModel_SectionOneDescription)
                        @Html.TextAreaFor(model => model.SectionOneDescription, new { @class = "form-control rtl-input section-one-description", rows = 5 })
                        @Html.ValidationMessageFor(model => model.SectionOneDescription, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionOneThumbnailImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionOneThumbnailImage" id="sectionOneThumbnailImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionOneThumbnailImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionOneThumbnailImageSource" />
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionOneImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionOneImage" id="sectionOneImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionOneImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionOneImageSource" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="form-group-sectiontwodescription">
                        @Html.Label(Strings.ServiceModel_SectionTwoDescription)
                        @Html.TextAreaFor(model => model.SectionTwoDescription, new { @class = "form-control rtl-input section-two-description", rows = 5 })
                        @Html.ValidationMessageFor(model => model.SectionTwoDescription, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionTwoThumbnailImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionTwoThumbnailImage" id="sectionTwoThumbnailImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionTwoThumbnailImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionTwoThumbnailImageSource" />
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionTwoImageSide)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionTwoImage" id="sectionTwoImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionTwoImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionTwoImageSource" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="form-group form-group-sectionthreedescription">
                        @Html.Label(Strings.ServiceModel_SectionThreeDescription)
                        @Html.TextAreaFor(model => model.SectionThreeDescription, new { @class = "form-control rtl-input section-three-description", rows = 5 })
                        @Html.ValidationMessageFor(model => model.SectionThreeDescription, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionThreeThumbnailImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionThreeThumbnailImage" id="sectionThreeThumbnailImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionThreeThumbnailImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionThreeThumbnailImageSource" />
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionThreeImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionThreeImage" id="sectionThreeImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionThreeImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionThreeImageSource" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="form-group form-group-sectionfourdescription">
                        @Html.Label(Strings.ServiceModel_SectionFourDescription)
                        @Html.TextAreaFor(model => model.SectionFourDescription, new { @class = "form-control rtl-input section-four-description", rows = 5 })
                        @Html.ValidationMessageFor(model => model.SectionFourDescription, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionFourThumnnailImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionFourThumbnailImage" id="sectionFourThumbnailImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionFourThumbnailImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionFourThumbnailImageSource" />
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.Label(Strings.ServiceModel_SectionFourImage)
                        </div>
                        <div class="col-sm-4">
                            <input type="file" accept="image/*" name="sectionFourImage" id="sectionFourImage">
                        </div>
                        <div class="col-sm-5">
                            @if (!string.IsNullOrEmpty(Model.SectionFourImageSource))
                            {
                                <img alt="image" class="img-preview img-news" src="@Model.SectionFourImageSource" />
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-4 col-sm-offset-0">
            <input type="submit" value="@Strings.Global_Save" class="btn btn-primary" />
        </div>
    </div>
}


@section scripts{
    @Scripts.Render("~/Content/RadaTemplate/js/plugins/summernote")
    <script>
        $(function () {
            $('#EditServiceForm').submit(function () {
                $("#Description").val(persianToEnglishNumber($(".form-group-description .note-editable").html()));
                $("#SectionOneDescription").val(persianToEnglishNumber($(".form-group-sectiononedescription .note-editable").html()));
                $("#SectionTwoDescription").val(persianToEnglishNumber($(".form-group-sectiontwodescription .note-editable").html()));
                $("#SectionThreeDescription").val(persianToEnglishNumber($(".form-group-sectionthreedescription .note-editable").html()));
                $("#SectionFourDescription").val(persianToEnglishNumber($(".form-group-sectionfourdescription .note-editable").html()));
                var formData = new FormData($(this)[0]);
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: formData,
                    success: function (result) {
                        alert(result);
                    },
                    error: function () {
                        alert('error');
                    }
                });
                return false;
            });

            var selectedTags = "@ViewBag.SelectedTags".split(',');
            $("#ServiceTagsId").val(selectedTags).trigger("change");

            $('.descriptionText').summernote();
            $('.section-one-description').summernote();
            $('.section-two-description').summernote();
            $('.section-three-description').summernote();
            $('.section-four-description').summernote();

            $('.form-group-description .note-codable').css('direction', 'ltr');
            $('.form-group-sectiononedescription .note-codable').css('direction', 'ltr');
            $('.form-group-sectiontwodescription .note-codable').css('direction', 'ltr');
            $('.form-group-sectionthreedescription .note-codable').css('direction', 'ltr');
            $('.form-group-sectionfourdescription .note-codable').css('direction', 'ltr');

            $('.form-group-description .note-editable').html(persianToEnglishNumber($(".form-group-description .note-editable").html()));
            $('.form-group-sectiononedescription .note-editable').html(persianToEnglishNumber($(".form-group-sectiononedescription .note-editable").html()));
            $('.form-group-sectiontwodescription .note-editable').html(persianToEnglishNumber($(".form-group-sectiontwodescription .note-editable").html()));
            $('.form-group-sectionthreedescription .note-editable').html(persianToEnglishNumber($(".form-group-sectionthreedescription .note-editable").html()));
            $('.form-group-sectionfourdescription .note-editable').html(persianToEnglishNumber($("form-group-sectionfourdescription .note-editable").html()));

        });
        function persianToEnglishNumber(input) {
            var inputstring = input;
            var persian = ["Û°", "Û±", "Û²", "Û³", "Û´", "Ûµ", "Û¶", "Û·", "Û¸", "Û¹"];
            var english = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
            for (var i = 0; i < 10; i++) {
                var regex = new RegExp(persian[i], 'g');
                inputstring = inputstring.toString().replace(regex, english[i]);
            }
            return inputstring;
        }
    </script>
}
