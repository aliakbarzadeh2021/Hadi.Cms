@using Hadi.Cms.Infrastructure.Helpers
@using Hadi.Cms.Language.Resources
@using Hadi.Cms.Model.Mappings.Interfaces
@model PagedList.IPagedList<IAttachmentFileDto>

@{
    ViewBag.Title = Strings.Global_FilesManagement;
}

@section style{
    @Styles.Render("~/Content/RadaTemplate/css/plugins/summernot")
    <link href="~/Content/RadaTemplate/css/plugins/sweetalert/sweetalert.css" rel="stylesheet">
    <link href="~/Content/RadaTemplate/css/plugins/footable/footable.core.css" rel="stylesheet">
    <link href="~/Content/RadaTemplate/css/plugins/chosen/chosen.css" rel="stylesheet">
}

<style>
    .float-e-margins .btn {
        margin-left: 4px;
    }

    .ibox .fa {
        font-size: 14px !important;
    }

    .opr table {
        margin: 0px 0px -7px -90px;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@Strings.Global_FilesManagement</h2>
        <ol class="breadcrumb">
            <li>

            </li>
            <div style="float: left; display: @(ViewBag.Success == null ? "none" : "block")">
                <div class="alert @(ViewBag.Success == "1" ? "alert-success" : "alert-danger") alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">Ã—</button>
                    @ViewBag.Message
                </div>
            </div>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@Strings.Global_FilesList</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up">
                            </i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-tasks">
                            </i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="@Url.Action("Create", "AttachmentFiles", new { area = "Admin" })">
                                    @Strings.Global_NewFile
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="ibox-content">
                    <input type="text" name="search" class="form-control input-sm m-b-xs" id="filter" placeholder="@Strings.Global_SearchInTable">
                    <div class="hr-line-dashed"></div>
                    <table class="footable table table-stripped toggle-arrow-tiny" data-page-size="8" data-filter="#filter">
                        <thead>
                            <tr>
                                <th>@Strings.Table_RowNumber</th>
                                <th>@Strings.FileModel_Name</th>
                                <th>@Strings.Global_Tags</th>
                                <th>@Strings.FileModel_Type</th>
                                <th>@Strings.FileModel_StorageType</th>
                                <th>@Strings.FileModel_LastModifiedDate</th>
                                <th>@Strings.FileModel_File</th>
                                <th>@Strings.FileModel_CreatedBy</th>
                                <th>@Strings.Table_UserOperations</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                var rowId = 0;

                                for (var i = 1; i < ViewBag.PageNumber; i++)
                                {
                                    rowId += 5;
                                }

                                foreach (var item in Model)
                                {
                                    string storageType = "";
                                    string width = "150px";
                                    string height = "100px";

                                    if (item.IsBinaryStorage)
                                    {
                                        item.Source = Url.Action("ReadFile", "AttachmentFiles", new { area = "Admin", Id = item.Id });
                                        storageType = "Binary";
                                        width = "65px";
                                        height = "60px";
                                    }

                                    if (item.IsPhysicalStorage)
                                    {
                                        item.Source = item.PhysicalPath;
                                        storageType = "Physical";
                                    }


                                    if (item.IsPhysicalStorage && !item.MimeType.Contains("image"))
                                    {
                                        width = "65px";
                                        height = "60px";
                                    }

                                    <tr class="gradeX">
                                        <td class="center">
                                            @(rowId += 1)
                                        </td>
                                        <td>
                                            @item.Name
                                        </td>
                                        <td>
                                            @string.Join(" - ", @item.AttachmentFileTagDto.Select(at => at.TagDto?.Title).ToList())
                                        </td>
                                        <td>
                                            @item.MimeType
                                        </td>
                                        <td>
                                            @storageType
                                        </td>
                                        <td>
                                            @item.LastModified.ToString("yyyy/MM/dd")
                                        </td>
                                        <td>
                                            <img src="@item.ShowImage" class="img img-thumbnail" style="width: @width; height: @height;" />
                                        </td>
                                        <td>
                                            @item.CreatedByUserName
                                        </td>
                                        <td class="opr">
                                            <a @*data-toggle="modal" data-target="#editModal"*@ href="@Url.Action("EditTags","AttachmentFiles",new {id = item.Id})" class="btn btn-warning btn-circle" title="@Strings.Global_Edit_File_Tags"><i class="fa fa-edit"></i></a>
                                            <a onclick="DeleteFileAlert('@item.Id');" class="btn btn-danger btn-circle" title="@Strings.Global_Delete"><i class="fa fa-remove"></i></a>
                                            <a href="@item.Source" target="_blank" class="btn btn-primary btn-circle" title="@Strings.Global_Show"><i class="fa fa-eye"></i></a>
                                        </td>

                                    </tr>

                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5">
                                    <ul class="pagination pull-right"></ul>
                                </td>
                            </tr>
                        </tfoot>
                    </table>

                </div>

                <div aria-label="Page navigation" class="text-center" id="myPager2">
                    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber }))
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Edit tags modal -->
<!--<div class="modal fade" id="editModal" role="dialog">
    <div class="modal-dialog">-->
        <!-- Modal content-->
        <!--<div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Strings.Global_Edit_File_Tags</h4>
            </div>
            <div class="modal-body" id="editModalBody">
                <script>
                    function editFileTags(id) {
                        var xmlHttp = new XMLHttpRequest();
                        xmlHttp.open("GET", "/Admin/AttachmentFiles/EditTags?attachmentFileId=" + id, false); // false for synchronous request
                        xmlHttp.send(null);
                        //return xmlHttp.responseText;
                        var editForm = document.getElementById("editModalBody").innerHTML = xmlHttp.response;

                    }
                </script>
            </div>
        </div>
    </div>
</div>-->



@section scripts{
    <script src="~/Content/RadaTemplate/js/plugins/footable/footable.all.min.js"></script>
    <script src="~/Content/RadaTemplate/js/plugins/sweetalert/sweetalert.min.js"></script>
    <script src="~/Content/RadaTemplate/js/plugins/chosen/chosen.jquery.js"></script>

    <script>

        //$(function () {
        //    function reposition() {
        //        var modal = $(this),
        //            dialog = modal.find('.modal-dialog');
        //        modal.css('display', 'block');

        //        // Dividing by two centers the modal exactly, but dividing by three
        //        // or four works better for larger screens.
        //        dialog.css("margin-top", Math.max(0, ($(window).height() - dialog.height()) / 2));
        //    }
        //    // Reposition when a modal is shown
        //    $('.modal').on('show.bs.modal', reposition);
        //    // Reposition when the window is resized
        //    $(window).on('resize', function () {
        //        $('.modal:visible').each(reposition);
        //    });
        //});

        $(function () {
            $('.footable').footable();
        });

        function DeleteFileAlert(Id) {
            swal({
                    title: '@Strings.Are_You_Sure',
                    text: '@Strings.File_Management_Delete',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText:'@Strings.Yes',
                    cancelButtonText: '@Strings.No',
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                function (isConfirm) {
                    if (isConfirm) {
                        DeleteFile(Id);
                    }
                });
        }

        function DeleteFile(id) {
            var param = "@Url.Action("Delete", "AttachmentFiles", null, this.Request.Url.Scheme)";
            var ajaxdata = "Id=" + id;
            @Html.Ajax("POST", "", "nowhere", "ReturnDeleteFile")
        }

        function ReturnDeleteFile(data) {
            swal({
                title: data.Success,
                text: data.Message,
                type: "success",
                showCancelButton: false,
                confirmButtonColor: "#23c6c8",
                confirmButtonText: "OK",
                closeOnConfirm: true
            }, function () {
                window.location.reload();
            });
        }


    </script>
}
